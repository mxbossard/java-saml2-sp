<!--

    Copyright (C) 2012 RECIA http://www.recia.fr
    @Author (C) 2012 Maxime Bossard <mxbossard@gmail.com>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- CacheManager Configuration ========================== An ehcache.xml 
	corresponds to a single CacheManager. See instructions below or the ehcache 
	schema (ehcache.xsd) on how to configure. System property tokens can be specified 
	in this file which are replaced when the configuration is loaded. For example 
	multicastGroupPort=${multicastGroupPort} can be replaced with the System 
	property either from an environment variable or a system property specified 
	with a command line switch such as -DmulticastGroupPort=4446. Another example, 
	useful for Terracotta server based deployments is <terracottaConfig url="${serverAndPort}"/ 
	and specify a command line switch of -Dserver36:9510 The attributes of <ehcache> 
	are: * name - an optional name for the CacheManager. The name is optional 
	and primarily used for documentation or to distinguish Terracotta clustered 
	cache state. With Terracotta clustered caches, a combination of CacheManager 
	name and cache name uniquely identify a particular cache store in the Terracotta 
	clustered memory. * updateCheck - an optional boolean flag specifying whether 
	this CacheManager should check for new versions of Ehcache over the Internet. 
	If not specified, updateCheck="true". * dynamicConfig - an optional setting 
	that can be used to disable dynamic configuration of caches associated with 
	this CacheManager. By default this is set to true - i.e. dynamic configuration 
	is enabled. Dynamically configurable caches can have their TTI, TTL and maximum 
	disk and in-memory capacity changed at runtime through the cache's configuration 
	object. * monitoring - an optional setting that determines whether the CacheManager 
	should automatically register the SampledCacheMBean with the system MBean 
	server. Currently, this monitoring is only useful when using Terracotta clustering 
	and using the Terracotta Developer Console. With the "autodetect" value, 
	the presence of Terracotta clustering will be detected and monitoring, via 
	the Developer Console, will be enabled. Other allowed values are "on" and 
	"off". The default is "autodetect". This setting does not perform any function 
	when used with JMX monitors. -->
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
	updateCheck="true" monitoring="autodetect" dynamicConfig="true">
	<!-- DiskStore configuration ======================= The diskStore element 
		is optional. To turn off disk store path creation, comment out the diskStore 
		element below. Configure it if you have overflowToDisk or diskPersistent 
		enabled for any cache. If it is not configured, and a cache is created which 
		requires a disk store, a warning will be issued and java.io.tmpdir will automatically 
		be used. diskStore has only one attribute - "path". It is the path to the 
		directory where .data and .index files will be created. If the path is one 
		of the following Java System Property it is replaced by its value in the 
		running VM. For backward compatibility these should be specified without 
		being enclosed in the ${token} replacement syntax. The following properties 
		are translated: * user.home - User's home directory * user.dir - User's current 
		working directory * java.io.tmpdir - Default temp file path * ehcache.disk.store.dir 
		- A system property you would normally specify on the command line e.g. java 
		-Dehcache.disk.store.dir=/u01/myapp/diskdir ... Subdirectories can be specified 
		below the property e.g. java.io.tmpdir/one -->
	<diskStore path="java.io.tmpdir" />

	<!-- Default Cache configuration. These settings will be applied to caches 
		created programmatically using CacheManager.add(String cacheName). This element 
		is optional, and using CacheManager.add(String cacheName) when its not present 
		will throw CacheException The defaultCache has an implicit name "default" 
		which is a reserved cache name. -->
	<defaultCache maxElementsInMemory="10000" eternal="false"
		timeToIdleSeconds="600" timeToLiveSeconds="600" overflowToDisk="true"
		diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" clearOnFlush="false" />


	<!-- Caching SAML requests waiting for response data for 1 hour -->
	<cache name="samlRequestWaitingForResponseCache" maxElementsInMemory="100000"
		eternal="false" timeToIdleSeconds="3600" timeToLiveSeconds="600"
		overflowToDisk="true" diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" clearOnFlush="false" />

	<!-- Caching SAML authentications data for 24 hours -->
	<cache name="samlAuthenticationCache" maxElementsInMemory="10000"
		eternal="false" timeToIdleSeconds="86400" timeToLiveSeconds="86400"
		overflowToDisk="true" diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" clearOnFlush="false" />

	<!-- Caching Auth infos for 24 hours -->
	<cache name="saml2AuthCredsCache" maxElementsInMemory="10000"
		eternal="false" timeToIdleSeconds="86400" timeToLiveSeconds="86400"
		overflowToDisk="true" diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" />

	<!-- Caching Auth BaseId for 24 hours -->
	<cache name="saml2BaseIdCache" maxElementsInMemory="10000"
		eternal="false" timeToIdleSeconds="86400" timeToLiveSeconds="86400"
		overflowToDisk="true" diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" />

	<!-- Caching Auth NameId for 24 hours -->
	<cache name="saml2NameIdCache" maxElementsInMemory="10000"
		eternal="false" timeToIdleSeconds="86400" timeToLiveSeconds="86400"
		overflowToDisk="true" diskSpoolBufferSizeMB="30" maxElementsOnDisk="10000000"
		diskPersistent="true" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" />

</ehcache>